{"version":3,"sources":["components/NavBar.jsx","components/Home.jsx","components/Login.jsx","components/UserFunctions.js","components/AddBookForm.jsx","components/rest_api_routes.js","components/DataTable.jsx","components/SearchBar.jsx","components/Dashboard.jsx","components/SearchResults.jsx","components/Reports.jsx","components/ProtectedRoute.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginLink","react_default","a","createElement","className","react_router_dom","to","userLink","href","onClick","logOut","bind","usertoken","Component","withRouter","Home","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","username","password","error","onChange","assertThisInitialized","onSubmit","setState","defineProperty","target","name","value","_this2","user","axios","post","then","response","setItem","data","catch","err","console","log","login","res","authenticated","Fragment","noValidate","htmlFor","type","placeholder","style","color","AddBookForm","toggle","modal","title","author","ISBN","published_date","Date","handleChange","date","toDateString","formatted_date","getFullYear","getMonth","getDate","book","body","JSON","stringify","headers","Content-Type","alert","window","location","reload","class","autoFocus","required","es","selected","DataTable","pageOfItems","onChangePage","id","confirm","delete","concat","scope","map","d","handleDelete","JwPagination_default","items","pageSize","SearchBar","query","pathname","Dashboard","books","form_on","toggle_form","fetchBooks","fetch","json","AddBookForm_AddBookForm","SearchBar_SearchBar","DataTable_DataTable","SearchResults","match","params","Reports","src","alt","ProtectedRoute","_ref","component","rest","objectWithoutProperties","react_router","assign","render","getItem","from","App","NavBar","exact","path","ProtectedRoute_ProtectedRoute","SearchResults_SearchResults","timestamp","toString","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bded5397.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { isAuthenticated } from './UserFunctions';\n\nclass Navbar extends Component {\n  logOut(e) {\n    e.preventDefault();\n    localStorage.removeItem('usertoken');\n    this.props.history.push(`/`);\n  }\n\n  render() {\n    const loginLink = (\n      <div className='container'>\n        <div className=\"text-center\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Login\n          </Link>\n          <p className='mt-2'>\n            Please Log In to Use This Website\n          </p>\n\n        </div>\n      </div>\n    );\n\n    const userLink = (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\n            Logout\n          </a>\n          <p className='mt-2'>You are logged in</p>\n          <Link to='/dashboard'>Dashboard</Link>\n        </div>\n      </div>\n    );\n\n    return (\n      <div className='container'>\n        <div className=\"text-center\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n                {localStorage.usertoken ? userLink : loginLink}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navbar);\n","import React, { Component } from 'react';\nimport NavBar from './NavBar'\n\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"mx-auto\">\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { login } from './UserFunctions';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      error: '',\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    login(user).then(res => {\n      if (!res.error) {\n       this.props.history.push('/dashboard')\n      }\n      else{\n        this.setState({\"error\": res.error})\n      }\n    });\n  }\n  logOut(e) {\n    e.preventDefault();\n    localStorage.removeItem('usertoken');\n    this.setState({authenticated:false})\n    this.props.history.push(`/`);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"text-center mx-auto\">\n            <form noValidate onSubmit={this.onSubmit}>\n              <h1 className=\"h3 mb-3 font-weight-normal\">Sign in</h1>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  type=\"test\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  placeholder=\"Enter email\"\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg btn-primary btn-block\"\n              >\n                Sign in\n              </button>\n              <h1 style={{color: 'red' }}>{this.state.error}</h1>\n            </form>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import axios from 'axios';\n\nexport const login = user => {\n  return axios\n    .post('http://127.0.0.1:5000/login', {\n      username: user.username,\n      password: user.password\n    })\n    .then(response => {\n      localStorage.setItem('usertoken', response.data);\n      return response.data;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const isAuthenticated = () => {\n    if(localStorage.getItem('usertoken') == null){\n      return false\n    }\n    return true\n}","import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios'\nimport { ADD_BOOK } from './rest_api_routes';\n\nexport default class AddBookForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      author: '',\n      ISBN: '',\n      published_date: new Date()\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  toggle = () => {\n    // Clear errors\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n  handleChange(date) {\n      this.setState({\n          published_date: date.toDateString()\n      });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    let formatted_date = this.state.published_date.getFullYear() + \":\" + (this.state.published_date.getMonth() + 1) +\n          ':' +\n          this.state.published_date.getDate();\n    const book = {\n        title: this.state.title,\n        author: this.state.author,\n        ISBN: this.state.ISBN,\n        published_date: formatted_date\n    }\n    \n    const config = {\n        headers:{\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify(book)\n    axios.post(ADD_BOOK,body, config)\n    .then(res => alert(\"Success!\")).then(res=> window.location.reload())\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              onChange={this.onChange}\n              class=\"form-control\"\n              name=\"title\"\n              placeholder=\"Title\"\n              autoFocus\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"author\">Author</label>\n            <input\n              type=\"text\"\n              onChange={this.onChange}\n              class=\"form-control\"\n              name=\"author\"\n              placeholder=\"Author\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"ISBN\">ISBN</label>\n            <input\n              type=\"text\"\n              onChange={this.onChange}\n              class=\"form-control\"\n              name=\"ISBN\"\n              placeholder=\"ISBN\"\n              required\n            />\n          </div>\n          <div className='form-group'>\n            <label htmlFor=\"\">Published Date</label>\n            <br/>\n            <DatePicker\n                selected={this.state.published_date}\n                onChange={this.handleChange}\n                required\n            />\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","export const ADD_BOOK = 'http://127.0.0.1:5000/books';\nexport const GET_ALL_BOOKS = 'http://127.0.0.1:5000/books';\nexport const DELETE_BOOK = 'http://127.0.0.1:5000/books';\nexport const GET_BOOKS_FROM_QUERY = 'http://127.0.0.1:5000/books/others';\n\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport JwPagination from 'jw-react-pagination'\nimport { DELETE_BOOK } from './rest_api_routes';\n\nexport default class DataTable extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      pageOfItems: []\n    }\n    this.onChangePage = this.onChangePage.bind(this);\n  }\n\n  onChangePage(pageOfItems) {\n    // update local state with new page of items\n    this.setState({ pageOfItems });\n  }\n\n  handleDelete(id){\n    if(window.confirm(\"This transaction is irreversible. Are you sure?\")){\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        axios.delete(`${DELETE_BOOK}/${id}`, config)\n            .then(res => alert(\"Success!\")).then(res => window.location.reload())\n    }\n    else {\n        alert(\"Transaction cancelled\")\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <table className=\"table table-striped\">\n          <thead className='thead-dark'>\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Author</th>\n              <th scope=\"col\">Published Date</th>\n              <th scope=\"col\">ISBN</th>\n              <th scope=\"col\">Action(s)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.pageOfItems.map(d => (\n              <tr>\n                <td>{d.id}</td>\n                <td>{d.title}</td>\n                <td>{d.author}</td>\n                <td>{d.published_date}</td>\n                <td>{d.ISBN}</td>\n                <td>\n                    <button className=\"btn btn-danger\" onClick={this.handleDelete.bind(this,d.id)}> Delete </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        <div className=\"text-center\">\n          <JwPagination items={this.props.data} onChangePage={this.onChangePage} pageSize={10} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class SearchBar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            query: ''\n        }\n        this.onChange = this.onChange.bind(this)\n    }\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <form className=\"form-inline\">\n                    <input className=\"form-control\" type=\"search\" placeholder=\"Title, Author, ISBN...\" name=\"query\" id=\"search\" required onChange={this.onChange} />\n                    <Link to={{ pathname: `/search/${this.state.query}`, state: 'flushDeal' }}>\n                        <span className=\"input-group-append\">\n                            <button class=\"btn btn-search my-2 my-sm-0 \" type=\"submit\">\n                            </button>\n                        </span>\n                    </Link>\n                </form>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport AddBookForm from './AddBookForm';\nimport DataTable from './DataTable';\nimport SearchBar from './SearchBar';\nimport { GET_ALL_BOOKS, GET_DAILY_REPORT_PLOT, GET_WEEKLY_REPORT_PLOT } from './rest_api_routes';\nimport {Link} from 'react-router-dom'\nexport default class Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [],\n      form_on: false\n    };\n    this.toggle_form = this.toggle_form.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchBooks();\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {}\n  toggle_form() {\n    this.setState({\n      form_on: !this.state.form_on\n    });\n  }\n\n  fetchBooks() {\n    fetch(GET_ALL_BOOKS)\n      .then(res => res.json())\n      .then(res =>\n        this.setState({\n          books: res\n        })\n      );\n  }\n\n  render() {\n    const form = () => {\n      return <AddBookForm />;\n    };\n    return (\n      <div className=\"container\">\n        \n        <div>\n          <Link to='/reports'>View Reports</Link>\n        </div>\n        <div>\n          <button className=\"btn btn-primary mb-2 mt-3\" onClick={this.toggle_form}>\n            {' '}\n            Add Book{' '}\n          </button>\n          {this.state.form_on ? form() : null}\n        </div>\n        <br />\n        <div className='mb-3'>\n          <SearchBar />\n        </div>\n        <div className='text-center'>\n          <DataTable data={this.state.books} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport { GET_BOOKS_FROM_QUERY } from './rest_api_routes';\nimport DataTable from './DataTable';\n\n\nexport default class SearchResults extends Component {\n    constructor(){\n        super()\n        this.state = {\n            books: []\n        }\n    }\n\n    componentDidMount() {\n        this.fetchBooks()\n    }\n\n    fetchBooks(){\n    fetch(`${GET_BOOKS_FROM_QUERY}/${this.props.match.params.query}`)\n      .then(res => res.json())\n      .then(res =>\n        this.setState({\n            books: res\n        })\n      );\n    }\n    \n\n    render() {\n        return (\n        <div className=\"container\">\n            <div className='text-center mt-3'>\n                <DataTable data={this.state.books} />\n            </div>\n        </div>\n        )\n    }\n}","import React, { Component } from 'react'\n\nexport default class Reports extends Component {\n\n    render() {\n        return (\n            <div className='container'>\n                <div className=\"row\">\n                    <div className='col-6'>\n                        <img src=\"/images/daily.png\" alt=\"Daily chart\" /><br />\n                        <p><b>Daily</b></p>\n                    </div>\n                    <div className='col-6'>\n                        <img src=\"/images/weekly.png\" alt=\"Weekly chart\" /><br />\n                        <p><b>Weekly</b></p>\n                    </div>  \n                </div>\n                                        \n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './UserFunctions';\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (isAuthenticated()) {\n          return <Component {...props} />;\n        }\n        else{\n            return <Redirect to={\n                {pathname: \"/\",\n                state:{\n                    from: props.location\n                }}\n            }/>\n        }\n      }}\n    />\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Dashboard from './components/Dashboard';\nimport SearchResults from './components/SearchResults';\nimport Reports from './components/Reports';\nimport { ProtectedRoute } from './components/ProtectedRoute';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"mx-auto\">\n          <h1 className=\"text-center mt-5\">Library Management System</h1>\n          <NavBar />\n          <hr className=\"w-50\" />\n        </div>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} />\n          <ProtectedRoute exact path=\"/reports\" component={Reports}/>\n          <ProtectedRoute\n            path=\"/search/:query?\"\n            component={props => (\n              <SearchResults timestamp={new Date().toString()} {...props} />\n            )}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}