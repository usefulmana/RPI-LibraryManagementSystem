{"version":3,"sources":["components/NavBar.jsx","components/Home.jsx","components/Login.jsx","components/UserFunctions.js","components/AddBookForm.jsx","components/rest_api_routes.js","components/DataTable.jsx","components/SearchBar.jsx","components/Dashboard.jsx","components/SearchResults.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","e","preventDefault","localStorage","removeItem","this","props","history","push","loginLink","react_default","a","createElement","className","react_router_dom","to","userLink","href","onClick","logOut","bind","usertoken","Component","withRouter","Home","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","username","password","error","onChange","assertThisInitialized","onSubmit","setState","defineProperty","target","name","value","_this2","user","axios","post","then","response","setItem","data","catch","err","console","log","login","res","Fragment","noValidate","htmlFor","type","placeholder","style","color","AddBookForm","toggle","modal","title","author","ISBN","published_date","Date","handleChange","date","toDateString","formatted_date","getFullYear","getMonth","getDate","book","body","JSON","stringify","headers","Content-Type","alert","window","location","reload","class","autoFocus","required","es","selected","DataTable","pageOfItems","onChangePage","id","confirm","delete","concat","scope","map","d","handleDelete","JwPagination_default","items","pageSize","SearchBar","query","pathname","Dashboard","books","form_on","toggle_form","fetchBooks","fetch","json","AddBookForm_AddBookForm","SearchBar_SearchBar","DataTable_DataTable","SearchResults","match","params","App","NavBar","react_router","exact","path","component","SearchResults_SearchResults","assign","timestamp","toString","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.256b860f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n  logOut(e) {\r\n    e.preventDefault();\r\n    localStorage.removeItem('usertoken');\r\n    this.props.history.push(`/`);\r\n  }\r\n\r\n  render() {\r\n    const loginLink = (\r\n      <div className='container'>\r\n        <div className=\"text-center\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const userLink = (\r\n      <div className=\"container\">\r\n        <div className=\"text-center\">\r\n          <a href=\"\" onClick={this.logOut.bind(this)} className=\"nav-link\">\r\n            Logout\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className='container'>\r\n        <div className=\"text-center\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n                {localStorage.usertoken ? userLink : loginLink}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { Component } from 'react';\r\nimport NavBar from './NavBar'\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"mx-auto\">\r\n          <p>Please log in to use this website!</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport { login } from './UserFunctions';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      error: ''\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    login(user).then(res => {\r\n      if (!res.error) {\r\n       this.props.history.push('/dashboard')\r\n      }\r\n      else{\r\n        this.setState({\"error\": res.error})\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"text-center mx-auto\">\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <h1 className=\"h3 mb-3 font-weight-normal\">Sign in</h1>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  type=\"test\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  placeholder=\"Enter email\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-lg btn-primary btn-block\"\r\n              >\r\n                Sign in\r\n              </button>\r\n              <h1 style={{color: 'red' }}>{this.state.error}</h1>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import axios from 'axios';\r\n\r\nexport const login = user => {\r\n  return axios\r\n    .post('http://127.0.0.1:5000/login', {\r\n      username: user.username,\r\n      password: user.password\r\n    })\r\n    .then(response => {\r\n      localStorage.setItem('usertoken', response.data);\r\n      return response.data;\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport axios from 'axios'\r\nimport { ADD_BOOK } from './rest_api_routes';\r\n\r\nexport default class AddBookForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      author: '',\r\n      ISBN: '',\r\n      published_date: new Date()\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  toggle = () => {\r\n    // Clear errors\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  };\r\n  handleChange(date) {\r\n      this.setState({\r\n          published_date: date.toDateString()\r\n      });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    let formatted_date = this.state.published_date.getFullYear() + \":\" + (this.state.published_date.getMonth() + 1) +\r\n          ':' +\r\n          this.state.published_date.getDate();\r\n    const book = {\r\n        title: this.state.title,\r\n        author: this.state.author,\r\n        ISBN: this.state.ISBN,\r\n        published_date: formatted_date\r\n    }\r\n    \r\n    const config = {\r\n        headers:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify(book)\r\n    axios.post(ADD_BOOK,body, config)\r\n    .then(res => alert(\"Success!\")).then(res=> window.location.reload())\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n              class=\"form-control\"\r\n              name=\"title\"\r\n              placeholder=\"Title\"\r\n              autoFocus\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"author\">Author</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n              class=\"form-control\"\r\n              name=\"author\"\r\n              placeholder=\"Author\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ISBN\">ISBN</label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.onChange}\r\n              class=\"form-control\"\r\n              name=\"ISBN\"\r\n              placeholder=\"ISBN\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <label htmlFor=\"\">Published Date</label>\r\n            <br/>\r\n            <DatePicker\r\n                selected={this.state.published_date}\r\n                onChange={this.handleChange}\r\n                required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const ADD_BOOK = 'http://127.0.0.1:5000/books';\r\nexport const GET_ALL_BOOKS = 'http://127.0.0.1:5000/books';\r\nexport const DELETE_BOOK = 'http://127.0.0.1:5000/books';\r\nexport const GET_BOOKS_FROM_QUERY = 'http://127.0.0.1:5000/books/others';\r\nexport const GET_DAILY_REPORT_PLOT = 'http://127.0.0.1:5000/daily';\r\nexport const GET_WEEKLY_REPORT_PLOT = 'http://127.0.0.1:5000/weekly';\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport JwPagination from 'jw-react-pagination'\r\nimport { DELETE_BOOK } from './rest_api_routes';\r\n\r\nexport default class DataTable extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      pageOfItems: []\r\n    }\r\n    this.onChangePage = this.onChangePage.bind(this);\r\n  }\r\n\r\n  onChangePage(pageOfItems) {\r\n    // update local state with new page of items\r\n    this.setState({ pageOfItems });\r\n  }\r\n\r\n  handleDelete(id){\r\n    if(window.confirm(\"This transaction is irreversible. Are you sure?\")){\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        axios.delete(`${DELETE_BOOK}/${id}`, config)\r\n            .then(res => alert(\"Success!\")).then(res => window.location.reload())\r\n    }\r\n    else {\r\n        alert(\"Transaction cancelled\")\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <table className=\"table table-striped\">\r\n          <thead className='thead-dark'>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\">Author</th>\r\n              <th scope=\"col\">Published Date</th>\r\n              <th scope=\"col\">ISBN</th>\r\n              <th scope=\"col\">Action(s)</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.pageOfItems.map(d => (\r\n              <tr>\r\n                <td>{d.id}</td>\r\n                <td>{d.title}</td>\r\n                <td>{d.author}</td>\r\n                <td>{d.published_date}</td>\r\n                <td>{d.ISBN}</td>\r\n                <td>\r\n                    <button className=\"btn btn-danger\" onClick={this.handleDelete.bind(this,d.id)}> Delete </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"text-center\">\r\n          <JwPagination items={this.props.data} onChangePage={this.onChangePage} pageSize={10} />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class SearchBar extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            query: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n    }\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"form-inline\">\r\n                    <input className=\"form-control\" type=\"search\" placeholder=\"Title, Author, ISBN...\" name=\"query\" id=\"search\" required onChange={this.onChange} />\r\n                    <Link to={{ pathname: `/search/${this.state.query}`, state: 'flushDeal' }}>\r\n                        <span className=\"input-group-append\">\r\n                            <button class=\"btn btn-search my-2 my-sm-0 \" type=\"submit\">\r\n                            </button>\r\n                        </span>\r\n                    </Link>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport AddBookForm from './AddBookForm';\r\nimport DataTable from './DataTable';\r\nimport SearchBar from './SearchBar';\r\nimport { GET_ALL_BOOKS, GET_DAILY_REPORT_PLOT, GET_WEEKLY_REPORT_PLOT } from './rest_api_routes';\r\n\r\nexport default class Dashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      books: [],\r\n      form_on: false\r\n    };\r\n    this.toggle_form = this.toggle_form.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchBooks();\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {}\r\n  toggle_form() {\r\n    this.setState({\r\n      form_on: !this.state.form_on\r\n    });\r\n  }\r\n\r\n  fetchBooks() {\r\n    fetch(GET_ALL_BOOKS)\r\n      .then(res => res.json())\r\n      .then(res =>\r\n        this.setState({\r\n          books: res\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const form = () => {\r\n      return <AddBookForm />;\r\n    };\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n        <div>\r\n          <a href={GET_DAILY_REPORT_PLOT} target=\"_blank\">Generate Daily Report</a> | \r\n          <a href={GET_WEEKLY_REPORT_PLOT} target=\"_blank\"> Generate Weekly Report</a>\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary mb-2 mt-3\" onClick={this.toggle_form}>\r\n            {' '}\r\n            Add Book{' '}\r\n          </button>\r\n          {this.state.form_on ? form() : null}\r\n        </div>\r\n        <br />\r\n        <div className='mb-3'>\r\n          <SearchBar />\r\n        </div>\r\n        <div className='text-center'>\r\n          <DataTable data={this.state.books} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { GET_BOOKS_FROM_QUERY } from './rest_api_routes';\r\nimport DataTable from './DataTable';\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class SearchResults extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            books: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchBooks()\r\n    }\r\n\r\n    fetchBooks(){\r\n    fetch(`${GET_BOOKS_FROM_QUERY}/${this.props.match.params.query}`)\r\n      .then(res => res.json())\r\n      .then(res =>\r\n        this.setState({\r\n            books: res\r\n        })\r\n      );\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n        <div className=\"container\">\r\n            <Link to='/dashboard'>Dashboard</Link>\r\n            <div className='text-center mt-3'>\r\n                <DataTable data={this.state.books} />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Switch } from 'react-router-dom';\r\nimport NavBar from './components/NavBar';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Dashboard from './components/Dashboard';\r\nimport SearchResults from './components/SearchResults';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className=\"mx-auto\">\r\n          <h1 className=\"text-center mt-5\">Library Management System</h1>\r\n          <NavBar />\r\n          <hr className=\"w-50\" />\r\n        </div>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard} />\r\n          <Route\r\n            path=\"/search/:query?\"\r\n            component={props => (\r\n              <SearchResults timestamp={new Date().toString()} {...props} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}